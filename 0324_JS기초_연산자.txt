[03.24. 학습일정]
1. JS 연산자
2. JS 배열
3. 웹사이트 로그인
    페이지 제작 실습
4. 상담, 평가 채점

------------------------------


[JS 연산자]
=> JS에서는 계산할 수 기능을 제공함.
     계산기능(=연산기능)을 활용하여
     수치의 변화를 가져올 수 있다.

      수치 값의 활용예.
 1. HTML, CSS에서 사용되는 모든 수치관련값
    관련내용을 조작할 수 있음.
    1) HTML => 몇 번째 요소를 사용하느냐?
            <ul>
                <li>...</li>  => 1
                <li>...</li>  => 2
                <li>...</li>  => 3
                <li>...</li>  => 4
            </ul>
    2) CSS => width: 200px;
                   padding: 40px;
                   border: 1px solid #000;
                   position: absolute;
                   left: 0px;
                   ...
                   선택자:nth-child(2)
                   선택자:nth-child(3)
                   선택자:nth-child(2n+1)
                   선택자:nth-child(2n-1)
                   선택자:nth-child(2n)
     3) JS에서 특정 결과를 산출하기위해
        자체적으로 계산에 사용됨.

        보기. 쇼핑몰  특정 제품가격 15,000원
                           구매수량 3개
                          결제금액 => 15000 * 3
                또한 이 계산과정에 필요한
                값들을  HTML에서 가져와서
                사용할 수 있음.

가격 <input type="text" id="goodsPrice">
수량 <select id="goodsCount">
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
       </select>

JS로 가격에 입력된 값을 가져오는 방법 =>
var price = 
    document.getElementById("goodsPrice").value;
var cnt = 
    document.getElementById("goodsCount").value;

총액 = price * cnt;   // 단, 숫자 자료형으로 변경필요

 2. 프로그래밍 기능 활용
    프로그래밍 기능이란?
    => 컴퓨터 프로그램을 사용하여
       수치계산 + 값의 임시 보관 및 영구 보관
       + 특정 조건에서의 특정 값 선택
       + 특정 조건에서의 특정 상황을 순환 등
       퍼블리셔 또는 개발자가 요구하는 
       결과를 만들어 내기 위한 방법을 제공하는 기능

      1+2  => 3
      1+2+3 => 6
      1+2+3+4 => 10
      1+2+3+ ... + 10 => 55
      1+2+3+ ...  + 37 => ?
      1+3+5+7+ ... + 21 =>
      활용예 => 
     서대문구 대현동 60대분들의 평균나이
     2020년 1년간 카드 사용총액, 월평균액,
     월간 최대 사용액, 월간 최소 사용액


[JS에서 사용되는 연산자 정리]
1. 산술연산자 
        +, -, *, /,   %  (나머지 연산자)
     첫 번째 값 : 17
     두 번째 값 : 5
     덧셈결과 =>    17 + 5     22
     뺄셈결과 =>    17 - 5      12
     곱셈결과 =>    17 * 5      85
     나눗셈결과 =>  17 / 5     3.4
     나머지연산결과 =>   17  %  5   =>  2
                                       0.4  (X)
     내부 JS
       
     <script>
          // 방법1
          alert(17 % 5);

          // 방법2 - 변수 사용
         var number1 = 17;
         var number2 = 5;
         var result = number1 % number2;
          alert(result);

          // 값을 html요소로부터 가져와서 사용하기
     </script>
     

2. 증감연산자    ++,   -- 
3. 복합대입연산자   +=
   (=이중대입연산자)
4. 비교연산자   >, >=, <, <=, ==, !=
5. 논리연산자  ||, &&, !
6. 3항연산자     ?   :   (기호 2개가 같이 사용됨)
   (=조건연산자)

[연산자 실습]
폴더명 => 
D:\webPub_1201\kjj
   \silsp\js\silsp_Operator
html파일명 => operator.html
js파일명 => /script/script.js




                // document.getElementById("addRes").innerText; 
                // => HTML의 내용을 가져오는 것
                // document.getElementById("addRes").innerText = result;
                // => JS의 값을 HTML의 내용에 입력하는 것



                //  선택자.text(A);  =>  선택자의 내용에 A를 입력하세요.
                //  선택자.text();  =>  선택자의 내용을 가져오세요.




.innerText   => 요소의 내용
.value        => 입력양식의 값

----------------------------------------------

연산자
+
HTML, JS의 데이터 전달
1. HTML => JS
  1) <span id="data">내용</span>
   var data = document.getElementById("data").innerText;
  //                ---------------------------------------------------
  //  순서2        순서1(html에서 span요소의 내용을 가져옴)

   jQuery 적용 보기.
     var data = $("#data").text( );

  2) <input type="text" id="data">
   var data = document.getElementById("data").value;

   jQuery 적용 보기.
     var data = $("#data").val( );


2. JS => HTML 

   1)  <span id="data">내용</span>

     var 변수 = 데이터A;  //순서1 ( 데이터, 즉 특정 값을 변수에 저장)
       document.getElementById("data").innerText = 변수;
                                                            ------------
                                        // 순서2 (데이터를 html요소에 전달)   

        jQuery =>
    var 변수 = 데이터A;  //순서1 ( 데이터, 즉 특정 값을 변수에 저장)
    $("#data").text(변수);


  2) <input type="text" id="data">
   var 변수 = 데이터;
   document.getElementById("data").value = 변수;

   jQuery 적용 보기.
     var 변수 = 데이터;
     $("#data").val(변수);


---------------------------------------------

   사용 예
나이를 3개 입력받고
나이의 평균 구하기

폴더명 =>
D:\webPub_1201\kjj\silsp\js
\silsp_AgeAverage
html파일명 => ageAvg.html
JS파일명 => /script/script.js
jQuery라이브러리 => CDN 방식적용


----------------------------------------

[상품 상세보기 페이지 총 금액 계산1]
폴더=>
D:\webPub_1201\kjj\quiz
   \js\operator\priceCalc
html 파일 => priceCalc.html
script파일 => /script/script.js
jQuery_Lib => CDN

















